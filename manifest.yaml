id: gitea
title: "Gitea"
version: 11.16.9
release-notes: "Initial release of gitea for Embassy OS"
license: AGPL
wrapper-repo: "https://github.com/chrisguida/gitea-wrapper"
upstream-repo: "https://github.com/go-gitea/gitea"
support-site: "https://docs.gitea.io/en-us/"
marketing-site: "https://gitea.io/en-us/"
build: ["make"]
description:
  short: A painless self-hosted Git service.
  long: |
    Gitea is a community managed lightweight code hosting solution written in Go. It is published under the MIT license.
assets:
  license: LICENSE
  icon: icon.svg
  instructions: instructions.md
  docker-images: image.tar
main:
  type: docker
  image: main
  entrypoint: "/usr/bin/entrypoint"
  args: ["/bin/s6-svscan", "/etc/s6"]
  mounts:
    main: /data
health-checks:
  # version:
  #   name: Database
  #   success-message: Backend is reachable and responsive.
  #   type: docker
  #   image: main
  #   entrypoint: health-check.sh
  #   args: ["api"]
  #   io-format: json
  #   inject: true
  web:
    name: Web Interface
    success-message: Gitea is ready to be visited in your browser.
    type: docker
    image: main
    entrypoint: check-web.sh
    args: ["web"]
    io-format: json
    inject: true
config:
  get:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - config
      - get
      - /data
      - "/mnt/assets/config_spec.yaml"
    mounts:
      compat: /mnt/assets
      main: /datadir
    io-format: yaml
  set:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - config
      - set
      - cryptpad
      - /data
      - "/mnt/assets/config_rules.yaml"
      # - "/mnt/assets/dependencies.yaml"
    mounts:
      compat: /mnt/assets
      main: /data
    io-format: yaml
properties: ~
  # type: docker
  # image: compat
  # system: true
  # entrypoint: compat
  # args:
  #   - properties
  #   - /gitea
  # mounts:
  #   main: /gitea
  # io-format: yaml
dependencies: {}
volumes:
  main:
    type: data
  compat:
    type: assets
interfaces:
  main:
    name: Web UI
    description: Gitea Browser Interface
    tor-config:
      port-mapping:
        80: "3000"
    lan-config:
      443:
        ssl: true
        internal: 3000
    ui: true
    protocols:
      - tcp
      - http
  ssh:
    name: SSH
    description: SSH interface - allows authentication to git repos via SSH keys
    tor-config:
      port-mapping:
        22: "22"
    # lan-config:
    #   22:
    #     internal: 22
    ui: false
    protocols:
      - tcp
      - ssh
alerts: {}
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /gitea
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
    io-format: yaml
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /gitea
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
    io-format: yaml
# actions:
#   reset-root-user:
#     name: Reset Root User
#     description: Resets your root user (the first user) to username "admin" and a random password; restores any lost admin privileges.
#     warning: This will invalidate existing sessions and password managers if you have them set up.
#     allowed-statuses:
#       - stopped
#     implementation:
#       type: docker
#       image: main
#       system: false
#       entrypoint: docker_entrypoint.sh
#       args: ["reset-root-user"]
#       mounts:
#         main: /root
#       io-format: json
migrations:
  from:
    "*":
      type: docker
      image: main
      system: false
      entrypoint: "/bin/echo"
      args: ['{"configured": true}']
      io-format: json
      inject: false
  to:
    "*":
      type: docker
      image: main
      system: false
      entrypoint: "/bin/echo"
      args: ['{"configured": true}']
      io-format: json
      inject: false
